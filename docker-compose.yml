
# docker-compose for development
# version: '3.8'
# services:
#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     environment:
#       - NODE_ENV=${NODE_ENV}
#       - DB_HOST=db
#       - DB_USER=${DB_USER}
#       - DB_PASSWORD=${DB_PASSWORD}
#       - DB_NAME=${DB_NAME}
#       - DB_PORT=3306
#       - PORT=3000
#     ports:
#       - "3000:3000"
#     depends_on:
#       db:
#         condition: service_healthy
#     networks:
#       - fluiana-network

#   db:
#     image: mysql:8.4.2
#     environment:
#       MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
#       MYSQL_DATABASE: ${DB_NAME}
#     ports:
#       - "3306:3306"
#     healthcheck:
#       test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
#       timeout: 20s
#       retries: 10
#     networks:
#       - fluiana-network

# networks:
#   fluiana-network:
#     driver: bridge

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=3306
      - PORT=3000
    ports:
      - "80:3000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - fluiana-network
    restart: always
  db:
    image: mysql:8.4.2
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - fluiana-network
    restart: always
networks:
  fluiana-network:
    driver: bridge